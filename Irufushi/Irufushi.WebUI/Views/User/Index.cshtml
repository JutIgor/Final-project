@model Abstract.Entities.UserProfile


@if (ViewBag.Button == true && Request.IsAuthenticated) 
{ 
    if(ViewBag.TypeButton == true)
    {
        @Html.ActionLink("Add to friends", "AddFriend", "User", 
        new { id = this.ViewContext.RouteData.Values["id"] }, null)
    }
    else
    {
        @Html.ActionLink("Delete from friends", "DeleteFriend", "User", 
        new { id = this.ViewContext.RouteData.Values["id"] }, null)
    }
    
    @Html.ActionLink("Send Message", "ShowMessages", "User", 
        new { id = this.ViewContext.RouteData.Values["id"] }, null)
}

<fieldset class="form-horizontal margin-login col-sm-offset-3 col-sm-10" id="UserInputs">
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.AboutUser.FirstName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.AboutUser.FirstName)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.AboutUser.LastName, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.AboutUser.LastName)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.AboutUser.BirthDate, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.AboutUser.BirthDate)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.Label("Are you man?", new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.AboutUser.Gender)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.Label("Phone number", new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Contacts.PhoneNum)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.Label("Mobile phone number", new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Contacts.MobPhoneNum)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.Contacts.Skype, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Contacts.Skype)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.Label("Contact email", new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Contacts.ContEmail)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.Contacts.ICQ, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Contacts.ICQ)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.Location.Country, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Location.Country)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.Location.City, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Location.City)
            </div>
        </div>
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.Location.Address, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <div class="input-group">
                @Html.DisplayFor(model => model.Location.Address)
            </div>
        </div>
    </div>
</fieldset>